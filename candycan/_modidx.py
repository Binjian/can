# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/candycan',
                'doc_host': 'https://Binjian.github.io',
                'git_url': 'https://github.com/Binjian/candycan',
                'lib_path': 'candycan'},
  'syms': { 'candycan.a2l': { 'candycan.a2l.AxisScale': ('01.a2l.html#axisscale', 'candycan/a2l.py'),
                              'candycan.a2l.AxisScale.__repr__': ('01.a2l.html#axisscale.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.AxisScale.address': ('01.a2l.html#axisscale.address', 'candycan/a2l.py'),
                              'candycan.a2l.AxisScale.data_conversion': ('01.a2l.html#axisscale.data_conversion', 'candycan/a2l.py'),
                              'candycan.a2l.AxisScale.input': ('01.a2l.html#axisscale.input', 'candycan/a2l.py'),
                              'candycan.a2l.AxisScale.record_type': ('01.a2l.html#axisscale.record_type', 'candycan/a2l.py'),
                              'candycan.a2l.Bunch': ('01.a2l.html#bunch', 'candycan/a2l.py'),
                              'candycan.a2l.Bunch.__eq__': ('01.a2l.html#bunch.__eq__', 'candycan/a2l.py'),
                              'candycan.a2l.Bunch.__hash__': ('01.a2l.html#bunch.__hash__', 'candycan/a2l.py'),
                              'candycan.a2l.Bunch.__init__': ('01.a2l.html#bunch.__init__', 'candycan/a2l.py'),
                              'candycan.a2l.Bunch.__repr__': ('01.a2l.html#bunch.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.Bunch.fetch': ('01.a2l.html#bunch.fetch', 'candycan/a2l.py'),
                              'candycan.a2l.Calibration': ('01.a2l.html#calibration', 'candycan/a2l.py'),
                              'candycan.a2l.Calibration.__init__': ('01.a2l.html#calibration.__init__', 'candycan/a2l.py'),
                              'candycan.a2l.Calibration.__repr__': ('01.a2l.html#calibration.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.Calibration.address': ('01.a2l.html#calibration.address', 'candycan/a2l.py'),
                              'candycan.a2l.Calibration.axes': ('01.a2l.html#calibration.axes', 'candycan/a2l.py'),
                              'candycan.a2l.Calibration.data_conversion': ('01.a2l.html#calibration.data_conversion', 'candycan/a2l.py'),
                              'candycan.a2l.Calibration.record_type': ('01.a2l.html#calibration.record_type', 'candycan/a2l.py'),
                              'candycan.a2l.DataConversion': ('01.a2l.html#dataconversion', 'candycan/a2l.py'),
                              'candycan.a2l.DataConversion.__repr__': ('01.a2l.html#dataconversion.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.DataLayout': ('01.a2l.html#datalayout', 'candycan/a2l.py'),
                              'candycan.a2l.DataLayout.__repr__': ('01.a2l.html#datalayout.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.DataLayout.data_type': ('01.a2l.html#datalayout.data_type', 'candycan/a2l.py'),
                              'candycan.a2l.DataLayout.type_size': ('01.a2l.html#datalayout.type_size', 'candycan/a2l.py'),
                              'candycan.a2l.Generate_Init_XCPData_From_A2L': ( '01.a2l.html#generate_init_xcpdata_from_a2l',
                                                                               'candycan/a2l.py'),
                              'candycan.a2l.Get_Init_XCPData': ('01.a2l.html#get_init_xcpdata', 'candycan/a2l.py'),
                              'candycan.a2l.Get_XCPCalib_From_XCPJSon': ('01.a2l.html#get_xcpcalib_from_xcpjson', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePath': ('01.a2l.html#jsonnodepath', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePath.__init__': ('01.a2l.html#jsonnodepath.__init__', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePath.__iter__': ('01.a2l.html#jsonnodepath.__iter__', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePath.__repr__': ('01.a2l.html#jsonnodepath.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePath.lazy_path': ('01.a2l.html#jsonnodepath.lazy_path', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePath.leaf': ('01.a2l.html#jsonnodepath.leaf', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePathSegment': ('01.a2l.html#jsonnodepathsegment', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePathSegment.__init__': ('01.a2l.html#jsonnodepathsegment.__init__', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePathSegment.__repr__': ('01.a2l.html#jsonnodepathsegment.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.JsonNodePathSegment.is_dict': ('01.a2l.html#jsonnodepathsegment.is_dict', 'candycan/a2l.py'),
                              'candycan.a2l.Measurement': ('01.a2l.html#measurement', 'candycan/a2l.py'),
                              'candycan.a2l.Measurement.__repr__': ('01.a2l.html#measurement.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.Measurement.address': ('01.a2l.html#measurement.address', 'candycan/a2l.py'),
                              'candycan.a2l.Measurement.data_conversion': ('01.a2l.html#measurement.data_conversion', 'candycan/a2l.py'),
                              'candycan.a2l.Measurement.record_type': ('01.a2l.html#measurement.record_type', 'candycan/a2l.py'),
                              'candycan.a2l.Record': ('01.a2l.html#record', 'candycan/a2l.py'),
                              'candycan.a2l.Record.__init__': ('01.a2l.html#record.__init__', 'candycan/a2l.py'),
                              'candycan.a2l.Record.__repr__': ('01.a2l.html#record.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.Record.fetch': ('01.a2l.html#record.fetch', 'candycan/a2l.py'),
                              'candycan.a2l.Record.load_records': ('01.a2l.html#record.load_records', 'candycan/a2l.py'),
                              'candycan.a2l.Record.load_types': ('01.a2l.html#record.load_types', 'candycan/a2l.py'),
                              'candycan.a2l.XCPCalib': ('01.a2l.html#xcpcalib', 'candycan/a2l.py'),
                              'candycan.a2l.XCPConfig': ('01.a2l.html#xcpconfig', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData': ('01.a2l.html#xcpdata', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.__repr__': ('01.a2l.html#xcpdata.__repr__', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.binary32_to_float': ('01.a2l.html#xcpdata.binary32_to_float', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.check_map_dimension': ('01.a2l.html#xcpdata.check_map_dimension', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.check_value_length': ('01.a2l.html#xcpdata.check_value_length', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.hex_to_float': ('01.a2l.html#xcpdata.hex_to_float', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.type_size': ('01.a2l.html#xcpdata.type_size', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.value_array_view': ('01.a2l.html#xcpdata.value_array_view', 'candycan/a2l.py'),
                              'candycan.a2l.XCPData.value_bytes': ('01.a2l.html#xcpdata.value_bytes', 'candycan/a2l.py'),
                              'candycan.a2l.check_a2l_type': ('01.a2l.html#check_a2l_type', 'candycan/a2l.py'),
                              'candycan.a2l.get_argparser': ('01.a2l.html#get_argparser', 'candycan/a2l.py'),
                              'candycan.a2l.list_of_strings': ('01.a2l.html#list_of_strings', 'candycan/a2l.py'),
                              'candycan.a2l.load_a2l_eager': ('01.a2l.html#load_a2l_eager', 'candycan/a2l.py'),
                              'candycan.a2l.load_a2l_lazy': ('01.a2l.html#load_a2l_lazy', 'candycan/a2l.py'),
                              'candycan.a2l.load_class_type_a2l_lazy': ('01.a2l.html#load_class_type_a2l_lazy', 'candycan/a2l.py'),
                              'candycan.a2l.load_records_lazy': ('01.a2l.html#load_records_lazy', 'candycan/a2l.py')},
            'candycan.ccp': { 'candycan.ccp.CANFilter': ('02.ccp.html#canfilter', 'candycan/ccp.py'),
                              'candycan.ccp.SET_MTA_context': ('02.ccp.html#set_mta_context', 'candycan/ccp.py'),
                              'candycan.ccp.ScapyCANSpecs': ('02.ccp.html#scapycanspecs', 'candycan/ccp.py'),
                              'candycan.ccp.ScapyCANSpecs.channel': ('02.ccp.html#scapycanspecs.channel', 'candycan/ccp.py'),
                              'candycan.ccp.XLOAD_context': ('02.ccp.html#xload_context', 'candycan/ccp.py'),
                              'candycan.ccp.can_context': ('02.ccp.html#can_context', 'candycan/ccp.py'),
                              'candycan.ccp.check_bus_type': ('02.ccp.html#check_bus_type', 'candycan/ccp.py'),
                              'candycan.ccp.check_can_type': ('02.ccp.html#check_can_type', 'candycan/ccp.py'),
                              'candycan.ccp.downlod_calib_data': ('02.ccp.html#downlod_calib_data', 'candycan/ccp.py'),
                              'candycan.ccp.downlod_calib_data2': ('02.ccp.html#downlod_calib_data2', 'candycan/ccp.py'),
                              'candycan.ccp.flash_xcp': ('02.ccp.html#flash_xcp', 'candycan/ccp.py'),
                              'candycan.ccp.get_argparser': ('02.ccp.html#get_argparser', 'candycan/ccp.py'),
                              'candycan.ccp.npa_to_packed_buffer': ('02.ccp.html#npa_to_packed_buffer', 'candycan/ccp.py'),
                              'candycan.ccp.upload_calib_data': ('02.ccp.html#upload_calib_data', 'candycan/ccp.py'),
                              'candycan.ccp.upload_calib_data2': ('02.ccp.html#upload_calib_data2', 'candycan/ccp.py')},
            'candycan.core': {'candycan.core.foo': ('00.core.html#foo', 'candycan/core.py')},
            'candycan.data_link_scapy': { 'candycan.data_link_scapy.get_argparser': ( '05.data_link_scapy.html#get_argparser',
                                                                                      'candycan/data_link_scapy.py'),
                                          'candycan.data_link_scapy.send_msg': ( '05.data_link_scapy.html#send_msg',
                                                                                 'candycan/data_link_scapy.py'),
                                          'candycan.data_link_scapy.signal_usr1': ( '05.data_link_scapy.html#signal_usr1',
                                                                                    'candycan/data_link_scapy.py')},
            'candycan.data_link_socketcan': { 'candycan.data_link_socketcan.get_argparser': ( '04.data_link_socketcan.html#get_argparser',
                                                                                              'candycan/data_link_socketcan.py'),
                                              'candycan.data_link_socketcan.receive_message': ( '04.data_link_socketcan.html#receive_message',
                                                                                                'candycan/data_link_socketcan.py'),
                                              'candycan.data_link_socketcan.send_msg': ( '04.data_link_socketcan.html#send_msg',
                                                                                         'candycan/data_link_socketcan.py'),
                                              'candycan.data_link_socketcan.signal_usr1': ( '04.data_link_socketcan.html#signal_usr1',
                                                                                            'candycan/data_link_socketcan.py')},
            'candycan.dbc': {},
            'candycan.receive_message': { 'candycan.receive_message.get_argparser': ( 'vcantest/receive_messasge.html#get_argparser',
                                                                                      'candycan/receive_message.py'),
                                          'candycan.receive_message.receive_message': ( 'vcantest/receive_messasge.html#receive_message',
                                                                                        'candycan/receive_message.py'),
                                          'candycan.receive_message.receive_msg': ( 'vcantest/receive_messasge.html#receive_msg',
                                                                                    'candycan/receive_message.py')},
            'candycan.send_message': { 'candycan.send_message.get_argparser': ( 'vcantest/send_message.html#get_argparser',
                                                                                'candycan/send_message.py'),
                                       'candycan.send_message.send_msg': ( 'vcantest/send_message.html#send_msg',
                                                                           'candycan/send_message.py'),
                                       'candycan.send_message.signal_usr1': ( 'vcantest/send_message.html#signal_usr1',
                                                                              'candycan/send_message.py')},
            'candycan.xcp': { 'candycan.xcp.flash_xcp': ('03.xcp.html#flash_xcp', 'candycan/xcp.py'),
                              'candycan.xcp.get_argparser': ('03.xcp.html#get_argparser', 'candycan/xcp.py'),
                              'candycan.xcp.npa_to_packed_buffer': ('03.xcp.html#npa_to_packed_buffer', 'candycan/xcp.py')}}}
